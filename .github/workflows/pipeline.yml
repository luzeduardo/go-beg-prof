name: CI Checks

on:
  push:
    branches:
      - main
    tags:
      -v*
jobs:
  test:
    name: Test App
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Downloads
        run: go get -t ./...
      - name: Test
        run: make test
      - name: Coverage Check
        run: make coverage
      - name: Generate Report
        run: make report
      - name: Copy Files
        run: |
          mkdir reports
          cp cover.xhtml reports/.
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: reports

  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Downloads
        run: go get -t ./...
      - name: Build
        run: make build
      - name: Copy Files
        run: |
          mkdir artifacts
          cp api artifacts/.
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: artifacts
  # containerize:
  #   name: Build Containers
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout code into Go module directory
  #       uses: actions/checkout@v4
  #     - name: Build Min
  #       run: docker build -t ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:min .
  #     - name: Build Dev
  #       run: docker build -t ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:dev .
  #         --target=dev .
  #     - name: Log in to GHCR
  #       uses: docker/login-action@master
  #       with:
  #         registry: ${{env.REGISTRY}}
  #         username: ${{github.actor}}
  #         password: ${{secrets.GITHUB_TOKEN}}
  #     - name: Push Docker min image to GHCR
  #       run: docker push ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:min
  #     - name: Push Docker dev image to GHCR
  #       run: docker push ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:dev
  
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: api
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref  }}
          release_name: Release ${{ github.ref  }}
          body: |
              ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN:
            ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
